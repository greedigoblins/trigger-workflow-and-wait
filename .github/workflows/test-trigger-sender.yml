name: Test Trigger (Sender)

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: 'Target repository (owner/repo)'
        required: true
        default: 'greedigoblins/trigger-workflow-and-wait'
      workflow_file:
        description: 'Workflow file to trigger'
        required: true
        default: 'test-receiver.yml'
      test_message:
        description: 'Test message to send'
        required: false
        default: 'Hello from trigger test!'

jobs:
  trigger-workflow:
    runs-on: ubuntu-latest
    name: Trigger another workflow
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Extract owner and repo
        id: extract
        run: |
          OWNER=$(echo "${{ github.event.inputs.target_repo }}" | cut -d'/' -f1)
          REPO=$(echo "${{ github.event.inputs.target_repo }}" | cut -d'/' -f2)
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          echo "repo=$REPO" >> $GITHUB_OUTPUT
      
      - name: Trigger workflow and wait
        id: trigger
        uses: ./
        with:
          owner: ${{ steps.extract.outputs.owner }}
          repo: ${{ steps.extract.outputs.repo }}
          github_token: ${{ secrets.YOUR_TOKEN_SECRET }}  # Replace with your actual token secret name
          workflow_file_name: ${{ github.event.inputs.workflow_file }}
          wait_interval: '10'
          propagate_failure: 'true'
          trigger_workflow: 'true'
          wait_workflow: 'true'
        env:
          INPUT_OWNER: ${{ steps.extract.outputs.owner }}
          INPUT_REPO: ${{ steps.extract.outputs.repo }}
      
      - name: Display results
        run: |
          echo "âœ… Workflow triggered successfully!"
          echo "Workflow ID: ${{ steps.trigger.outputs.workflow_id }}"
          echo "Workflow URL: ${{ steps.trigger.outputs.workflow_url }}"
