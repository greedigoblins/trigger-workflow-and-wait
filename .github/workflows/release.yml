name: Release

on:
  release:
    types: [published]

jobs:
  build-and-tag:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build action
      run: npm run build
    
    - name: Get release version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Update major version tag
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
        
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Create or update the major version tag (e.g., v1, v2)
        git tag -fa $MAJOR_VERSION -m "Update $MAJOR_VERSION tag"
        git push origin $MAJOR_VERSION --force
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-marketplace:
    runs-on: ubuntu-latest
    needs: build-and-tag
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build action  
      run: npm run build
    
    - name: Publish to GitHub Actions Marketplace
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/index.js
        asset_name: index.js
        asset_content_type: application/javascript
